--- shell.cpp (orig)
+++ shell.cpp (patched)
@@ -33,6 +33,18 @@
 void cmd_FIND  (xbase::DbArea&, std::istringstream&);
 void cmd_SEEK  (xbase::DbArea&, std::istringstream&);
 
+void cmd_CLEAR  (xbase::DbArea&, std::istringstream&);
+void cmd_CREATE (xbase::DbArea&, std::istringstream&);
+void cmd_DUMP   (xbase::DbArea&, std::istringstream&);
+void cmd_EDIT   (xbase::DbArea&, std::istringstream&);
+void cmd_LOCATE (xbase::DbArea&, std::istringstream&);
+void cmd_RECNO  (xbase::DbArea&, std::istringstream&);
+void cmd_REFRESH(xbase::DbArea&, std::istringstream&);
+void cmd_REPLACE(xbase::DbArea&, std::istringstream&);
+void cmd_STATUS (xbase::DbArea&, std::istringstream&);
+void cmd_STRUCT (xbase::DbArea&, std::istringstream&);
+void cmd_ZAP    (xbase::DbArea&, std::istringstream&);
+void cmd_APPEND_BLANK(xbase::DbArea&, std::istringstream&);
 // ---- Indexing command handlers (compiled when enabled) ----
 #if DOTTALK_WITH_INDEX
 void cmd_INDEX    (xbase::DbArea&, std::istringstream&);   // e.g., INDEX ON <expr> TAG <tag> [ASC|DESC]
@@ -114,6 +126,19 @@
     cli::reg.add("DESCEND",   [](DbArea& A, std::istringstream& S){ cmd_DESCEND(A,S); });
 #endif
 
+    // --- Extra lifecycle / edit / info commands being wired in ---
+    cli::reg.add("APPEND BLANK", [](DbArea& A, std::istringstream& S){ cmd_APPEND_BLANK(A,S); });
+    cli::reg.add("CLEAR",        [](DbArea& A, std::istringstream& S){ cmd_CLEAR(A,S); });
+    cli::reg.add("CREATE",       [](DbArea& A, std::istringstream& S){ cmd_CREATE(A,S); });
+    cli::reg.add("DUMP",         [](DbArea& A, std::istringstream& S){ cmd_DUMP(A,S); });
+    cli::reg.add("EDIT",         [](DbArea& A, std::istringstream& S){ cmd_EDIT(A,S); });
+    cli::reg.add("LOCATE",       [](DbArea& A, std::istringstream& S){ cmd_LOCATE(A,S); });
+    cli::reg.add("RECNO",        [](DbArea& A, std::istringstream& S){ cmd_RECNO(A,S); });
+    cli::reg.add("REFRESH",      [](DbArea& A, std::istringstream& S){ cmd_REFRESH(A,S); });
+    cli::reg.add("REPLACE",      [](DbArea& A, std::istringstream& S){ cmd_REPLACE(A,S); });
+    cli::reg.add("STATUS",       [](DbArea& A, std::istringstream& S){ cmd_STATUS(A,S); });
+    cli::reg.add("STRUCT",       [](DbArea& A, std::istringstream& S){ cmd_STRUCT(A,S); });
+    cli::reg.add("ZAP",          [](DbArea& A, std::istringstream& S){ cmd_ZAP(A,S); });
     cli::reg.add("HELP", [&](DbArea&, std::istringstream&){
         cli::reg.help(std::cout);
     });
